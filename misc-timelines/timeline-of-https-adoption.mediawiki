This timeline describes the gradual increase in websites and clients using HTTPS.

== Big picture ==

=== Entity types and qualitative details ===

HTTPS is an end-to-end protocol. Therefore, it need only be supported by the browser (on the client side) and the server (it could be terminated at the load balancer or proxy or dealt with directly by the process serving the content).

Other intermediaries, like Internet Service Providers (ISPs), routers, networking services, etc. do not need to be upgraded to support HTTPS. The main effects on them from the transition to HTTPS are: (a) the ability of their {{w|packet analyzer}}s to sniff traffic reduces, and (b) the volume of traffic they deal with goes up a little bit.

{| class="wikitable sortable"
! Entity type !! Broad classification !! Top entity names !! Typical stages !! Details
|-
| Standard || -- || || || This includes standards around client-server communication for HTTPS. Most of these are published by the Internet Engineering Task Force (IETF).
|-
| Browser || Client-side || Chrome, Firefox, Netscape Navigator || Security warning || Beyond initial HTTPS support (which was present in most browsers from the get-go), the main browser evolution has centered around the way security warnings are presented around HTTP versus HTTPS, mixed content, and problems with HTTPS certificates.
|-
| Browser extension || Client-side || Firesheep, HTTPS Everywhere || Vulnerability exploit, security improvement || Browser extensions have played some role in identifying and protecting against vulnerabilities of unencrypted (plain HTTP) connections.
|-
| Website || Server-side || Lots of websites || HTTPS available, opt-in HTTPS-only, default HTTPS-only, HTTPS-only || Websites may start by making HTTPS available, so that people who type https:// in the browser will get the HTTPS website. They may then transition to allowing logged-in users to opt-in to HTTPS-only, so that they will see internal links in HTTPS only and will automatically be redirected from HTTP to HTTPS. The next step is default HTTPS-only, which means that except for users who explicitly opt out, everybody is redirected to HTTPS (this could come in two stages: first rolled out to logged-in users only, then to all). Finally, the HTTPS-only stage is when access over plain HTTP is no longer supported.
|-
| Webmail || Server-side || Gmail, Hotmail, Yahoo! Mail || HTTPS available, opt-in HTTPS-only, default HTTPS-only, HTTPS-only || Similar to the stages for website. However, webmail is generally more sensitive, so the importance of switching to HTTPS is higher, and webmail services switched to HTTPS before websites.
|-
| Search engine || Server-side || Google Search, Bing, Yahoo! Search || HTTPS available, opt-in HTTPS-only, default HTTPS-only, HTTPS-only || Similar to the stages for website. Search engine data is intermediate in sensitivity between websites and webmail, and in terms of the chronological evolution also moved to HTTPS somewhere in between.
|-
| Proxy/load balancer || Server-side || Amazon Web Services || Early SSL termination || Load balancers can manage the SSL/TLS certificates and forward only plain HTTP requests to the servers that have to actually respond to the request.
|-
| CDN || Server-side || Amazon CloudFront || Custom SSL || {{w|Content delivery network}}s are used to serve static content at low latency and low cost around the world. CDNs have evolved to allow customers to upload their own SSL certificates for content.
|-
| Ecosystem || Server-side || Advertising || || Various backend ecosystems that power the technology and monetization of the web, such as advertising, need to support HTTPS in order to complete the transition to HTTPS.
|}

=== Time period grouping ===

{| class="wikitable sortable"
! Time period !! Qualitative summary of developments
|-
| 1994–2007 || During this period, many of the standards related to HTTPS (HTTP over SSL, HTTP over TLS, SNI) are published as RFCs by the Internet Engineering Task Force. Certificate authorities (CAs) come into being and the CA/Browser Forum is created. A few sites, generally those related to e-commerce, start using HTTPS.
|-
| 2008–2012 || The move to HTTPS begins, with Google taking the lead, and Twitter and Facebook following. Webmail moves first, then search for logged-in users. The general playbook is: HTTPS available, opt-in HTTPS-only, then default HTTPS-only.
|-
| 2013–2014 || The move to HTTPS continues, with laggers in webmail and search catching up on encryption, and Google beginning encryption even for non-logged-in users. Toward the end of this period, Google begins aggressively pushing for the whole web to go HTTPS, first by stating that HTTPS will be a search ranking signal, then by declaring that Chrome eventually intends to mark all plain HTTP sites as not secure.
|-
| 2015–2017 || This is the period when the move to HTTPS intensifies among a number of ordinary websites. Wikipedia, Wordpress.com (?), Reddit, Imgur, and some major newspapers and magazines like the ''New York Times'', ''TechCrunch'', and ''Wired'' go HTTPS. Chrome begins the process of marking plain HTTP sites as Not Secure. Let's Encrypt makes it easy and free for people to move to HTTPS. Google and others set up systematic tracking of the proportion of HTTPS usage, and the period ends with a significant increase in HTTPS use.
|}

== Full timeline ==

{| class="wikitable sortable"
! Year !! Month and date (if available) !! Entity type !! Entity name !! Stage !! Details
|-
| 1994 || || Standard || SSL v1.0 || Protocol || {{w|Netscape Communications}} creates HTTPS for its {{w|Netscape Navigator}} web browser, originally for use with the {{w|Secure Sockets Layer}} (SSL) protocol (SSL version 1.0). Due to security issues, this is never officially published. See [[w:Transport Layer Security#SSL_1.0.2C_2.0_and_3.0]].
|-
| 1995 || {{w|February}} || Standard || SSL v2.0 || Protocol || SSL v2.0 is released. It has a number of security flaws. See [[w:Transport Layer Security#SSL_1.0.2C_2.0_and_3.0]].
|-
| 1996 || || Standard || SSL v3.0 || Protocol || SSL v3.0 is released and its specification is drafted. IETF would publish this draft as a historical document in 2011.<ref>{{Cite web|url = https://tools.ietf.org/html/rfc6101|title = The Secure Sockets Layer (SSL) Protocol Version 3.0|date = August 1, 2011|accessdate = November 23, 2017|publisher = [[Internet Engineering Task Force]]}}</ref>
|-
| 1999 || {{dts|January}} || Standard || TLS 1.0 || Protocol || Version 1.0 of the {{w|Transport Layer Security}} (TLS) protocol is published as RFC 2246. TLS would replace SSL as the protocol used for HTTPS.<ref>{{cite web|url = https://tools.ietf.org/html/rfc2246|title = The TLS Protocol Version 1.0|date = January 1, 1999|accessdate = November 23, 2017|publisher = Internet Engineering Task Force}}</ref>
|-
| 2000 || {{dts|May}} || Standard || HTTP over TLS || Protocol || RFC 2818 of the {{w|Internet Engineering Task Force}} (IETF) describes the standard for HTTPS, using HTTP over {{w|Transport Layer Security}} (TLS).<ref>{{cite web|url = https://tools.ietf.org/html/rfc2818|title = HTTP Over TLS|date = May 1, 2000|accessdate = November 23, 2017|publisher = Internet Engineering Task Force}}</ref>
|-
| 2003 || {{dts|June}} || Standard || SNI || Protocol || RFS 3546 of the IETF describes a number of augmentations to TLS, including {{w|Server Name Indication}} (SNI).<ref>{{cite web|url = https://tools.ietf.org/html/rfc3546|title = Transport Layer Security (TLS) Extensions|date = June 1, 2003|accessdate = November 20, 2017|publisher = Internet Engineering Task Force}}</ref>
|-
| 2005 || || || || || The {{w|CA/Browser Forum}} is founded. Ir is a voluntary consortium of certification authorities, vendors of Internet browser software, operating systems, and other PKI-enabled applications that promulgates industry guidelines governing the issuance and management of X.509 v.3 digital certificates that chain to a trust anchor embedded in such applications.
|-
| 2006 || {{dts|April}} || Standard || TLS 1.1 || Protocol || RFC 4346 defines TLS 1.1, the next version of TLS after TLS 1.0.<ref>{{cite web|url = https://tools.ietf.org/html/rfc4346|title = The Transport Layer Security (TLS) Protocol Version 1.1|date = April 1, 2006|accessdate = November 23, 2017|publisher = Internet Engineering Task Force}}</ref>
|-
| 2008 || {{dts|July 24}} || Webmail || Google (Gmail) || Opt-in HTTPS-only || Google adds a setting in Gmail for users to always use HTTPS. Even before this, users could (since the inception of Gmail) access it securely by explicitly typing https:// in the browser. With the new setting, users who have opted in to it will be redirected from HTTP to HTTPS.<ref>{{cite web|url = https://gmail.googleblog.com/2008/07/making-security-easier.html|title = Making security easier|date = July 24, 2008|accessdate = November 19, 2017|last = Rideout|first = Ariel|publisher = Google}}</ref>
|-
| 2008 || {{dts|August}} || Standard || TLS 1.2 || Protocol || RFC 5246 defines TLS 1.2, the next version of TLS after TLS 1.1.<ref>{{Cite web|url = https://tools.ietf.org/html/rfc5246|title = The Transport Layer Security (TLS) Protocol Version 1.2|date = August 1, 2008|accessdate = November 23, 2017|publisher = Internet Engineering Task Force}}</ref>
|-
| 2010 || {{dts|January 12}} || Webmail|| Google (Gmail) || Default HTTPS-only || Google switches all Gmail users to redirect to HTTPS; users can change their setings to not redirect to HTTPS. Previously, the default option for this setting was to not redirect, and users had to explicitly choose the option to redirect HTTP to HTTPS.<ref>{{cite web|url = https://gmail.googleblog.com/2010/01/default-https-access-for-gmail.html|title = Default https access for Gmail|date = January 12, 2010|accessdate = November 19, 2017|publisher = Google|last = Schillace|first = Sam}}</ref>
|-
| 2010 || {{dts|June 17}} || Browser extension || HTTPS Everywhere || Security improvement || The {{w|Electronic Frontier Foundation}} and {{w|The Tor Project, Inc}} launch {{w|HTTPS Everywhere}}, a {{w|Firefox}} extension, to make Firefox use HTTPS where possible.<ref>{{cite web|url = https://www.eff.org/deeplinks/2010/06/encrypt-web-https-everywhere-firefox-extension|title = Encrypt the Web with the HTTPS Everywhere Firefox Extension|last = Eckersley|first = Peter|date = June 17, 2010|accessdate = November 19, 2017|publisher = Electronic Frontier Foundation}}</ref> The extension would evolve over the coming years. As of 2017, it is supported on Firefox, Chrome, and Opera.<ref name=https-everywhere>{{cite web|url = https://www.eff.org/https-everywhere|title = HTTPS Everywhere|accessdate = November 19, 2017}}</ref>
|-
| 2010 || {{dts|June 2}} || Browser enhancement || SSL False Start || || A Google team comprising Adam Langley, Nagendra Modadugu, and Bodo Moeller propose SSL False Start, a client-side only change to reduce one round-trip from the SSL handshake.<ref>{{cite web|url = https://tools.ietf.org/html/draft-bmoeller-tls-falsestart-00|title = Transport Layer Security (TLS) False Start|date = June 2, 2010|accessdate = November 19, 2017|publisher = Internet Engineering Task Force}}</ref><ref>{{cite web|url = https://blog.chromium.org/2011/05/ssl-falsestart-performance-results.html|title = SSL FalseStart Performance Results|date = May 18, 2011|accessdate = November 19, 2017|publisher = Chromium blog}}</ref><ref>{{cite web|url = https://www.imperialviolet.org/2010/09/05/blacklisting.html|title = Changing HTTPS|date = September 5, 2010|accessdate = November 19, 2017|publisher = Imperial Violet}}</ref> Despite tests showing that it reduces latency by 30%, the effort would be abandoned in April 2012 because of incompatibility with some servers doing early HTTPS termination.<ref>{{cite web|url = https://arstechnica.com/information-technology/2012/04/google-abandons-noble-experiment-to-make-ssl-less-painful/|title = False Start’s sad demise: Google abandons noble attempt to make SSL less painful|last = Goodin|first = Dan|date = April 12, 2012|accessdate = November 19, 2017}}</ref>
|-
| 2010 || {{dts|October}} || Browser extension || Firesheep || Vulnerability exploit || {{w|Firesheep}}, a {{w|Firefox}} browser extension that uses a {{w|packet analyzer}} to intercept unencrypted {{w|session cookie}}s over {{w|Wi-Fi}} networks, is released. The extension highlights the need for greater security, both in terms of websites moving to HTTPS (end-to-end security) and improving security of Wi-Fi.
|-
| 2010 || {{dts|October 14}} || Proxy/load balancer || AWS Elastic Load Balancing || Early SSL termination || AWS Elastic Load Balancing announces support for SSL termination. This means that websites hosted on AWS, behind AWS load balancers, can upload their certificates to the load balancer, and have the load balancer take care of the SSL certificate, so that the servers that receive the actual traffic only have to handle HTTP traffic.<ref>{{cite web|url = https://aws.amazon.com/blogs/aws/elastic-load-balancer-support-for-ssl-termination/|title = AWS Elastic Load Balancing: Support for SSL Termination|date = October 14, 2010|accessdate = November 19, 2017|publisher = Amazon Web Services|last = Barr|first = Jeff}}</ref>
|-
| 2010 || {{dts|November 3}} || Website || GitHub || Default HTTPS-only || In response to the release of Firesheep, GitHub moves to HTTPS for all users; previously full-session SSL was only available to paying users.<ref>{{cite web|url = https://news.netcraft.com/archives/2010/11/03/github-moves-to-ssl-but-remains-firesheepable.html|title = GitHub moves to SSL, but remains Firesheepable|date = November 3, 2010|accessdate = November 20, 2017|publisher = Netcraft}}</ref>
|-
| 2010 || {{dts|November 9}} || Webmail || Hotmail (Microsoft) || Opt-in HTTPS-only || Microsoft lets users of its web-based email service, Hotmail, set HTTPS by default.<ref>{{cite web|url = https://www.cnet.com/news/microsoft-lets-hotmail-users-set-encryption-by-default/|title = Microsoft lets Hotmail users set encryption by default. Microsoft adds full-session encryption option to HOtmail and SSL for SkyDrive, Photos, Docs, and Devices pages.|last = Mills|first = Elinor|date = November 9, 2010|accessdate = November 20, 2017|publisher = ''CNet''}}</ref><ref name=wapo-yahoo-ssl>{{cite web|url = https://www.washingtonpost.com/news/the-switch/wp/2013/10/14/yahoo-to-make-ssl-encryption-the-default-for-webmail-users-finally/?utm_term=.ec5f73b0f28d|title = Yahoo to make SSL encryption the default for Webmail users. Finally.|last = Peterson|first = Andrea|last2 = Gellman|first2 = Barton|last3 = Soltani|first3 = Ashkan|date = October 14, 2013|accessdate = November 20, 2017}}</ref>
|-
| 2011 || {{dts|January}} || Website || Facebook || Opt-in HTTPS-only || {{w|Facebook}} begins allowing logged-in users to opt in to have all their Facebook browsing encrypted by HTTPS.<ref name=facebook-https-default>{{cite web|url = https://techcrunch.com/2012/11/18/facebook-https/|title = Facebook Could Slow Down A Tiny Bit As It Starts Switching All Users To Secure HTTPS Connections|last = Constine|first = Josh|date = November 18, 2012|accessdate = November 19, 2017|publisher = ''TechCrunch''}}</ref>
|-
| 2011 || {{dts|January}} || Standard || OCSP stapling || || RFC 6066, introducing OCSP stapling, is published.<ref>{{cite web|url = https://tools.ietf.org/html/rfc6066|title = Transport Layer Security (TLS) Extensions: Extension Definitions|date = January 1, 2011|accessdate = November 19, 2017}}</ref> OCSP stapling is an alternative approach to the {{W|Online Certificate Status Protocol}} llows the presenter of a certificate to bear the resource cost involved in providing OCSP responses by appending ("stapling") a time-stamped OCSP response signed by the CA to the initial TLS handshake, eliminating the need for clients to contact the certificate authority. RFC 6961 would cover the case of multiple OCSP stapling.<ref>{{cite web|url = https://tools.ietf.org/html/rfc6961|title = The Transport Layer Security (TLS) Multiple Certificate Status Request Extension|date = June 1, 2013|accessdate = November 19, 2017}}</ref>
|-
| 2011 || {{dts|March 15}} || Website || Twitter || Opt-in HTTPS-only || {{w|Twitter}} begins allowing logged-in users to opt in to have all their Twitter browsing encrypted by HTTPS.<ref name=twitter-https-optin>{{cite web|url = https://blog.twitter.com/official/en_us/a/2011/making-twitter-more-secure-https.html|title = Making Twitter more secure: HTTPS|date = March 15, 2011|accessdate = November 19, 2017|publisher = Twitter}}</ref>
|-
| 2011 || {{dts|July 15}} || Proxy/load balancer || Nginx || || GlobalSign, DigiCert, Comodo and NGINX Inc. announce a joint effort to add OCSP-stapling support to Nginx.<ref>{{cite web|url = https://www.nginx.com/press/globalsign-digicert-and-comodo-collaborate-nginx-improve-online/|title = GlobalSign, DigiCert and Comodo Collaborate with NGINX to Improve Online Trust through Enhanced Certificate Revocation Checking, sign a Sponsorship Agreement. New version of the popular NGINX web server to support OCSP-stapling|date = July 15, 2011|accessdate = November 19, 2017|publisher = NGINX, Inc.}}</ref>
|-
| 2011 || {{dts|October 18}} || Search engine || Google Search || Default HTTPS-only || Google makes HTTPS (using SSL) the default option for its search users who are logged in on google.com (its US site; regionally branded sites are not affected).<ref>{{cite web|url = https://googleblog.blogspot.in/2011/10/making-search-more-secure.html|title = Making search more secure|date = October 18, 2011|accessdate = November 19, 2017|publisher = Google}}</ref><ref>{{cite web|url = http://www.eweek.com/security/google-makes-https-encryption-default-for-search|title = Google Makes HTTPS Encryption Default for Search|last = Boulton|first = Clint|date = October 18, 2011|accessdate = November 19, 2017|publisher = eweek}}</ref><ref>{{cite web|url = https://searchengineland.com/google-to-begin-encrypting-searches-outbound-clicks-by-default-97435|title = Google To Begin Encrypting Searches & Outbound Clicks By Default With SSL Search|last = Sullivan|first = Danny|date = October 18, 2011|accessdate = November 19, 2017|publisher = Search Engine Land}}</ref> In particular, webmasters receiving traffic from Google Search will no longer be able to know the search terms that led to a specific visit.<ref>{{Cite web|url = https://analytics.googleblog.com/2011/10/making-search-more-secure-accessing.html|title = Making search more secure: Accessing search query data in Google Analytics|date = October 18, 2011|accessdate = November 19, 2017}}</ref><ref>{{cite web|url = https://searchengineland.com/google-puts-a-price-on-privacy-98029|title = Google Puts A Price On Privacy|last = Sullivan|first = Danny|date = October 22, 2011|accessdate = November 19, 2017}}</ref>
|-
| 2012 || {{dts|February 13}} || Website || Twitter || Default HTTPS-only || Twitter makes HTTPS the default for all logged-in users.<ref>{{cite web|url = https://blog.twitter.com/official/en_us/a/2012/securing-your-twitter-experience-with-https.html|title = Securing your Twitter experience with HTTPS|date = February 13, 2012|accessdate = November 19, 2017|publisher = Twitter}}</ref><ref>{{cite web|url = https://blog.codinghorror.com/should-all-web-traffic-be-encrypted/|title = Should All Web Traffic Be Encrypted?|date = February 23, 2012|accessdate = November 19, 2017|publisher = Coding Horror}}</ref><ref>{{cite web|url = https://www.ghacks.net/2012/02/14/twitter-makes-https-default-for-signed-in-users/|title = Twitter Makes HTTPS Default For Signed In Users|last = Brinkmann|first = Martin|date = February 14, 2012|accessdate = November 19, 2017}}</ref>
|-
| 2012 || {{dts|March}} || Search engine || Google Search || Default HTTPS-only || Google makes secure search the default globally for signed-in users. Previously, the change was limited to users on google.com.<ref>{{cite web|url = https://search.googleblog.com/2012/03/bringing-more-secure-search-around.html|title = Bringing more secure search around the globe|date = March 5, 2012|accessdate = November 19, 2017}}</ref>
|-
| 2012 || {{dts|July 31}} || Webmail || Outlook (formerly Hotmail) (Microsoft) || Default HTTPS-only || With the rebranding of Hotmail as Outlook.com, Microsoft moves to default HTTPS-only for all usersof the web-based email service.<ref name=wapo-yahoo-ssl/>
|-
| 2012 || {{dts|October 9}} || Website || Quora || Opt-in HTTPS-only || On or before this date, question-and-answer website {{w|Quora}} allows logged-in users to opt in to HTTPS-only.<ref>{{cite web|url = https://www.quora.com/Does-Quora-support-HTTPS/answer/Tom-Cook/log|title = Does Quora support HTTPS? Tom Cook's answer log|last = Cook|first = Tom|date = October 9, 2012|accessdate = November 20, 2017}}</ref>
|-
| 2012 || {{dts|November}} || Website || Facebook || Default HTTPS-only || Facebook rolls out its transition to HTTPS by default for all users, beginning with North America.<ref>{{cite web|url = https://developers.facebook.com/blog/post/2012/11/14/platform-updates--operation-developer-love/|title = Platform Updates: Operation Developer Love|last = Asthana|first = Shireesh|date = November 15, 2012|accessdate = November 19, 2017|publisher = Facebook}}</ref><ref name=facebook-https-default/> The move is reported to be completed on August 1, 2013.<ref>{{cite web|url = https://www.facebook.com/notes/facebook-engineering/secure-browsing-by-default/10151590414803920|title = Secure browsing by default|date = August 1, 2013|accessdate = November 20, 2017}}</ref>
|-
| 2012 || {{dts|November 19}} || Standard || RFC 6797 || Default HTTPS-only || The {{w|HTTP Strict Transport Security}} (HSTS) standard is published, after being approved on October 2.<ref>{{cite web|url = https://tools.ietf.org/html/rfc6797|title = HTTP Strict Transport Security (HSTS)|date = November 19, 2012|accessdate = November 19, 2017}}</ref> The standard allows a website to set a header specifying a time period over which the client must connect to the website only via HTTPS. This protects against {{w|protocol downgrade attack}}s and {{w|cookie hijacking}}, and also avoids the extra latency involved in redirecting HTTP to HTTPS.
|-
| 2013 || {{dts|February}} || || || || The {{w|Certificate Authority Security Council}} is founded by the seven largest [[w:certificate authority|certificate authorities]]: {{w|Comodo}}, {{w|Symantec}}, {{w|Trend Micro}}, {{w|DigiCert}}, {{w|Entrust}}, {{w|Entrust}}, {{w|GlobalSign}}, and {{w|GoDaddy}}.
|-
| 2013 || {{dts|August 21}} (actual release), August 1 (announcement) || Website || Wikipedia || Default HTTPS-only || Wikimedia Foundation turns on HTTPS for all logged-in users (announcement August 1).<ref>{{cite web|url = https://blog.wikimedia.org/2013/08/01/future-https-wikimedia-projects/|title = The future of HTTPS on Wikimedia projects|date = August 1, 2013|accessdate = September 25, 2016|publisher = Wikimedia Foundation|last = Lane|first = Ryan}}</ref><ref>{{cite web|url = https://www.fastcompany.com/3015199/the-code-war/after-nsas-xkeyscore-wikipedia-switches-to-secure-https|title = After NSA's XKeyscore, Wikipedia Switches To Secure HTTPS. The Wikimedia Foundation has announced it's pushing ahead with plans to secure its online systems due to NSA targeting.|last = Eaton|first = Kit|publisher = ''Fast Company''|date = August 2, 2013|accessdate = September 25, 2016}}</ref>
|-
| 2013 || {{dts|September}} || Search engine || Google Search || Default HTTPS-only || Google Search moves all searches, even those by users who are not logged in, to HTTPS. The only exception is ad clicks. The change is believed to be a response to concerns about privacy triggered by relevations about [[w:PRISM (surveillance program)|PRISM]], a United States federal government surveillance program.<ref>{{cite web|url = https://searchengineland.com/post-prism-google-secure-searches-172487|title = Post-PRISM, Google Confirms Quietly Moving To Make All Searches Secure, Except For Ad Clicks|last = Sullivan|first = Danny|date = September 23, 2013|accessdate = November 20, 2017}}</ref>
|-
| 2013 || {{dts|September 26}} || Website || Imgur || HTTPS available || Image-hosting service {{w|Imgur}} makes HTTPS available sitewide.<ref>{{cite web|url = https://blog.imgur.com//2013/09/26/100-million-uniques-higher-upload-limits-and-https-support/|title = 100 MILLION UNIQUES, HIGHER UPLOAD LIMITS, AND HTTPS SUPPORT|date = September 26, 2013|accessdate = November 20, 2017}}</ref>
|-
| 2013 || {{dts|October 14}} || Webmail || Yahoo! || Default HTTPS-only || Yahoo! Mail moves to a default of HTTPS-only.<ref name=wapo-yahoo-ssl/>
|-
| 2013 || {{dts|October 24}}, 25 || Website || Internet Archive || Default HTTPS-only || The {{w|Internet Archive}} announces that its websites archive.org (which includes the {{w|Wayback Machine}} at web.archive.org) and openlibrary.org are defaulted to HTTPS-only, though they will still be available over HTTP.<ref>{{cite web|url = http://blog.archive.org/2013/10/25/reader-privacy-at-the-internet-archive/|title = Reader Privacy at the Internet Archive|last = Kahle|first = Brewster|date = October 25, 2013|accessdate = November 19, 2017}}</ref><ref>{{cite web|url = https://bits.blogs.nytimes.com/2013/10/24/internet-archive-will-shield-visitors/|title = Internet Archive Will Shield Visitors|last = Streitfeld|first = David|date = October 24, 2013|accessdate = November 19, 2017|publisher = ''New York Times'' Bits Blog}}</ref><ref>{{cite web|url = https://thenextweb.com/insider/2013/10/25/3-million-users-per-day-internet-archive-switches-https-connections-default/|title = With over 3 million users per day, the Internet Archive switches to HTTPS connections by default|last = Protalinski|first = Emil|date = October 25, 2013|accessdate = November 19, 2017|publisher = ''The Next Web''}}</ref>
|-
| 2014 || {{dts|January 22}} || Search engine || Yahoo! || Default HTTPS-only || Yahoo! Search makes HTTPS-only the default. The change is initially rolled out on yahoo.com, but is expected to be rolled out to other regions as well.<ref>{{cite web|url = https://marketingland.com/yahoo-makes-secure-search-default-71308|title = Yahoo Makes Secure Search The Default|last = Sullivan|first = Danny|date = January 22, 2014|accessdate = November 20, 2017|publisher = MarketingLand}}</ref>
|-
| 2014 || {{dts|January}} || Website || YouTube || Some move to HTTPS || YouTube begins sending traffic over HTTPS, significantly increasing the volume of traffic sent on the web via HTTPS. By September 2014, 50% of YouTube traffic would be sent via HTTPS.<ref name=naylor>{{cite web|url = https://davidtnaylor.com/CostOfTheS.pdf|title = The Cost of the “S” in HTTPS|last = Naylor|first = David|last2 = Finamore|first2 = Alessandro|last2 = Leontiadis|first3 = Ilias|last4 = Grunenberger|first4 = Yan|last5 = Mellia|first5 = Marco|last6 = Munafo|first6 = Maurizio|last7 = Papagiannaki|first7 = Konstantina|last8 = Steenkiste|first8 = Peter}}</ref>
|-
| 2014 || {{dts|March 5}} || CDN || Amazon CloudFront || SNI custom SSL, HTTPS redirection || Amazon CloudFront announces support for customers to use their own SSL certificates through the implementation of {{w|Server Name Indication}}, as well as HTTP to HTTPS redirection (via 301 redirect).
|-
| 2014 || {{dts|July 29}} || App || Instagram || Default HTTPS-only || In response to reports about a zero-day security vulnerability, Instagram co-founder {{w|Mike Krieger}} reveals that the app is being moved over to HTTPS, with some parts of the app already 100% HTTPS.<ref>{{cite web|url = https://www.theinquirer.net/inquirer/news/2357779/instagram-to-use-https-following-discovery-of-gaping-security-hole-in-ios-app|title = Instagram to use HTTPS following discovery of gaping security hole in iOS app. Security expert warns users should not use the app until a patch is released|date = July 29, 2014|accessdate = November 19, 2017|publisher = The Inquirer}}</ref>
|-
| 2014 || {{dts|August 6}} || Search ranking || Google Search || HTTPS boost || Google announces search results will give preference to sites using HTTPS.  This added ranking signal would be a "lightweight" ranking boost.<ref>{{cite web|url=http://googlewebmastercentral.blogspot.com/2014/08/https-as-ranking-signal.html |title=HTTPS as a ranking signal |publisher=www.google.com |accessdate=Dec 1, 2014}}</ref><ref>{{Cite web|url = https://thenextweb.com/google/2014/08/07/google-is-now-ranking-websites-with-https-higher-in-its-search-results/|title = Google is now ranking websites with HTTPS higher in its search results|last = Russell|first = Jon|date = August 7, 2014|accessdate = November 19, 2017|publisher = ''The Next Web''}}</ref>
|-
| 2014 || {{dts|September 8}} || Website || Reddit || Opt-in HTTPS-only || Reddit gives logged-in users the option of using the site purely on HTTPS.<ref>{{cite web|url = https://redditblog.com/2014/09/08/hell-its-about-time-reddit-now-supports-full-site-https/|title = Hell, It’s About Time – reddit now supports full-site HTTPS|date = September 8, 2014|accessdate = November 19, 2017|publisher = Reddit}}</ref>
|-
| 2014 || {{dts|November 18}} || Certificate authority || Let's Encrypt || Free HTTPS certificates || {{w|Let's Encrypt}}, a certificate authority service that can issue HTTPS certificates for three months for free (with some limitations on the types of certificate and the conditions under which certificates can be issued), is publicly announced. The service would issue its first certificate on September 14, 2015, and leave beta on April 12, 2016.
|-
| 2014 || {{dts|December 18}} || Browser || Chrome || Security warning || Google Chrome announces its intention of adding warnings for users visiting non-HTTPS websites.<ref>{{cite web|url = http://www.thesempost.com/google-chrome-wants-warn-users-visiting-non-https-sites/|title = Google Chrome Wants to Warn Users Before Visiting All Non-HTTPS Sites|last = Slegg|first = Jennifer|date = December 18, 2014|accessdate = November 20, 2017|publisher = The SEM Post}}</ref> More details are announced in late January 2015.<ref>{{cite web|url = http://www.thesempost.com/first-look-google-chrome-plans-alert-users-non-https-websites/|title = First Look at How Google Chrome Plans to Alert Users to Non-HTTPS Websites|last = Slegg|first = Jennifer|date = January 28, 2015|accessdate = November 20, 2017}}</ref>
|-
| 2015 || {{dts|January 18}} || Report/Observatory || HTTPSWatch || State of HTTPS adoption || The oldest Internet Archive snapshot of HTTPSWatch appears to be on this date. The snapshot says that it is inspired by Alex Gaynor's blog posts that were published in November and December 2014, so it is likely to be pretty close to the actual start date.<ref>{{cite web|url = https://web.archive.org/web/20150118231201/https://httpswatch.com/#about|title = HTTPSWatch (About section)|accessdate = January 18, 2015}}</ref><ref>{{cite web|url = https://alexgaynor.net/2014/nov/12/state-of-news-tls/|title = The State of the News and TLS|last = Gaynor|first = Alex|date = November 12, 2015|accessdate = November 20, 2015}}</ref><ref>{{cite web|url = https://alexgaynor.net/2014/dec/30/state-of-news-tls-part-ii/|title = The State of the News and TLS: Part II|last = Gaynor|first = Alex|date = December 30, 2014|accessdate = November 20, 2017}}</ref>
|-
| 2015 || {{dts|February}} || Browser || Chrome || HTTP/2 || Chrome begins rolling out support for {{w|HTTP/2}}. Chrome supports HTTP/2 only over HTTPS, even though the standard allows for HTTP/2 outside of HTTPS (through the selective use of encryption).<ref>{{cite web|url = https://blog.chromium.org/2015/02/hello-http2-goodbye-spdy.html|title = Hello HTTP/2, Goodbye SPDY|date = February 9, 2015|accessdate = November 19, 2017|publisher = Chromium}}</ref>
|-
| 2015 || {{dts|March 12}} || Website/App || Pinterest || Default HTTPS-only || {{w|Pinterest}} announces that it has moved over to HTTPS, describing the challenges it faced along the way. With the increased security in place due to HTTPS, Pinterest also introduces a paid bug bounty program for the white hat hacker community to find security flaws.<ref>{{cite web|url = https://medium.com/@Pinterest_Engineering/making-pinterest-https-637ec925a8ad|title = Making Pinterest HTTPS|last = Moreno|first = Paul|date = March 12, 2015|accessdate = November 20, 2017|publisher = Pinterest Engineering via Medium}}</ref>
|-
| 2015 || {{dts|March 25}} || Ecosystem || Advertising || Exhortation || Writing for the {{w|Interactive Advertising Bureau}} (IAB), Brendan Riordan-Butterworth calls for the advertising ecosystem to move to HTTPS.<ref>{{cite web|url = https://www.iab.com/adopting-encryption-the-need-for-https/|title = Adopting Encryption: The Need for HTTPS|last = Riordan-Butterworth|first = Brendan|date = March 25, 2015|accessdate = November 20, 2017|publisher = Interactive Advertising Bureau}}</ref>
|-
| 2015 || {{dts|April 13}} || Browser || Firefox || Security warning || Mozilla announces plans to deprecate plain HTTP in their browser, Firefox.<ref>{{cite web|url = https://groups.google.com/forum/#!topic/mozilla.dev.platform/xaGffxAM-hs%5B1-25%5D|title = Intent to deprecate: Insecure HTTP|last = Barnes|first = Richard|date = April 13, 2015|accessdate = November 20, 2017}}</ref><ref>{{cite web|url = http://www.thesempost.com/mozilla-deprecate-http-firefox/|title = Mozilla Announces Plans to Deprecate HTTP in Firefox|date = April 16, 2015|accessdate = November 20, 2017|publisher = The SEM Post}}</ref>
|-
| 2015 || {{dts|June 8}} || Website || United States government || Default HTTPS-only || The White House {{w|Office of Management and Budget}} issues the HTTPS-Only Standard directive requiring that all United States federal government websites provide service only via HTTPS, with a deadline of end of 2016.<ref>{{Cite web|url = https://obamawhitehouse.archives.gov/sites/default/files/omb/memoranda/2015/m-15-13.pdf|title = Policy to Require Secure Connections across Federal Websites and Web Services|date = June 8, 2015|last = Scott|first = Tony|accessdate = November 20, 2017}}</ref><ref>{{cite web|url = https://obamawhitehouse.archives.gov/blog/2015/06/08/https-everywhere-government|title = HTTPS-Everywhere for Government|last = Scott|first = Tony|date = June 8, 2015|accessdate = November 20, 2017|publisher = Obama White House Archives}}</ref><ref>{{cite web|url = https://www.computerworld.com/article/2933172/government-it/us-to-require-https-for-all-government-websites.html|title = US to require HTTPS for all government websites. All public sites will be required to use the protocol by the end of 2016|last = Williams|first = Martyn|date = June 8, 2015|accessdate = November 20, 2017}}</ref>
|-
| 2015 || {{dts|June 12}} || Website || Wikipedia || Default HTTPS-only || The Wikimedia Foundation publishes a blog post stating that all properties (including Wikipedia) are being switched over to HTTPS; previously, HTTPS was used only for logged-in users. It seems the switch is being made immediately.<ref>{{cite web|url = https://blog.wikimedia.org/2015/06/12/securing-wikimedia-sites-with-https/|title = Securing access to Wikimedia sites with HTTPS|last = Welinder|first = Yana|last2 = Baranetsky|first2 = Victoria|last3 = Black|first3 = Brandon|date = June 12, 2015|accessdate = September 25, 2016|publisher = Wikimedia Foundation}}</ref><ref>{{cite web|url = http://www.welivesecurity.com/2015/06/15/wikipedia-switches-https-default/|title = Wikipedia switches to HTTPS by default|last = Thomas|first = Karl|date = June 15, 2015|accessdate = September 25, 2016|publisher = WeLiveSecurity}}</ref><ref>{{cite web|url = http://arstechnica.com/security/2015/06/wikipedia-goes-all-https-starting-immediately/|title = Wikipedia goes all-HTTPS, starting immediately. "We believe that the time for HTTPS by default is now."|last = Farivar|first = Cyrus|date = June 15, 2015|accessdate = September 25, 2016|publisher = ''ArsTechnica''}}</ref>
|-
| 2015 || {{dts|June}} || Search engine || Bing || Default HTTPS-only || {{w|Microsoft}} announces that it will make HTTPS-only the default on {{w|Bing}}, its search engine.<ref>{{cite web|url = https://blogs.bing.com/webmaster/2015/06/15/bing-moving-to-encrypt-search-traffic-by-default/|title = Bing Moving to Encrypt Search Traffic by Default|date = June 15, 2015|accessdate = November 20, 2017|publisher = Bing}}</ref><ref>{{cite web|url = https://securityintelligence.com/news/microsoft-to-make-https-a-default-setting-for-bing/|title = Microsoft to Make HTTPS a Default Setting for Bing|last = Schick|first = Shane|date = June 22, 2015|accessdate = November 20, 2017}}</ref>
|-
| 2015 || {{dts|June}} || Website || Reddit || Default HTTPS-only || {{w|Reddit}} switches to HTTPS-only, with users being automatically redirected from HTTP to HTTPS.<ref>{{cite web|url = https://motherboard.vice.com/en_us/article/kbzj7y/reddit-switches-to-https-encryption-by-default|title = Reddit Switches to Encryption By Default. The internet giant will switch to HTTPS by default by the end of the month.|author = Lorenzo Franceschi-Bicchierai|date = June 17, 2015|accessdate = November 19, 2017|publisher = ''Vice''}}</ref><ref>{{cite web|url = https://www.reddit.com/r/redditdev/comments/39zje0/reddit_will_soon_only_be_available_over_https/|title = reddit will soon only be available over HTTPS (self.redditdev)|date = June 16, 2015|accessdate = November 19, 2017|publisher = Reddit}}</ref>
|-
| 2015 || {{dts|June 30}} (deadline), April 17 (announcement) || Ad network || Google AdWords || HTTPS availability || As part of Google's HTTPS Everywhere initiative, {{w|Google AdWords}} announces, on April 17, some of it progress already made on moving ads to HTTPS (specifically, moving YouTube ads to HTTPS). Also, it is stated that the vast majority of mobile, video, and desktop display ads served to the Google Display Network, AdMob and DoubleClick publishers will be encrypted by June 30, and advertisers using any of the buying platforms, including AdWords and DoubleClick, will be able to serve HTTPS-encrypted display ads to all HTTPS-enabled inventory.<ref>{{cite web|url = https://adwords.googleblog.com/2015/04/ads-take-step-towards-https-everywhere.html|title = Ads Take a Step Towards “HTTPS Everywhere”|date = April 17, 2015|accessdate = November 20, 2017|publisher = Google AdWords}}</ref>
|-
| 2015 || {{dts|October 14}} || Browser || Chrome || Mixed-content || With version 46, Chrome kills off its HTTP-HTTPS "mixed-content" address bar warning. Now, HTTPS pages that load some auxiliary resources (such as images, calls to ad networks, etc.) over HTTP will say https in the address bar without the secure lock or green coloring. The change is based on the idea that mixed HTTP-HTTPS is in fact more secure than pure HTTP, and therefore should not appear scarier, and is intended to "encourage site operators to switch to HTTPS sooner rather than later."<ref>{{cite web|url = https://arstechnica.com/information-technology/2015/10/chrome-finally-kills-off-the-http-https-mixed-content-warning/|title = Chrome finally kills off the HTTP-HTTPS “mixed content” warning. Slightly alarming and not wholly useful yellow triangle is being retired.|last = Anthony|first = Sebastian|date = October 14, 2015|accessdate = November 20, 2017}}</ref><ref>{{cite web|url = http://www.zdnet.com/article/chrome-loosens-up-on-https-mixed-content-warning/|title = Chrome 46 loosens up on HTTPS 'mixed content' warnings. The browser -- known for being a bit overkill -- finally drops its yellow-warning attached to pages with both secure and non-secure content.|last = Whittaker|first = Zack|date = October 14, 2015|accessdate = November 19, 2017}}</ref>
|-
| 2016 || {{dts|February}} || Website || Wikipedia || Referrer policy || The Wikimedia Foundation rolls out an update to the HTTPS meta referrer policy, that reveals the Origin rather than the full path of the referring domain. This means that websites that receive traffic from Wikipedia can once again calculate how much traffic they are receiving from Wikipedia, an ability that was lost in the switch to HTTPS. However, unlike the pre-HTTPS situation, full referral paths are not accessible, so websites cannot know what Wikipedia pages are sending traffic to them. For more, see [https://meta.wikimedia.org/wiki/Research:Wikimedia_referrer_policy Research:Wikimedia referrer policy].<ref>{{cite web|url = https://phabricator.wikimedia.org/T87276|title = Set an explicit "Origin When Cross-Origin" referer policy via the meta referrer tag|date = August 18, 2015|accessdate = March 10, 2017}}</ref>
|-
| 2016 || {{dts|March 15}} || Report/Observatory || Google Transparency Report || State of HTTPS adoption || Google announces that it is adding a new section to its Transparency Report to track the progress of HTTPS adoption.<ref>{{cite web|url = https://security.googleblog.com/2016/03/securing-web-together_15.html|title = Securing the web, together|date = March 15, 2016|accessdate = November 19, 2017|publisher = Google Security Blog}}</ref><ref>{{cite web|url = https://www.seroundtable.com/google-https-adoption-rates-21785.html|title = Google Report On HTTPS Adoption Within Google & The Top Web Sites|last = Schwartz|first = Barry|date = March 16, 2016|accessdate = November 19, 2017|publisher = Search Engine Roundtable}}</ref><ref>{{cite web|url = https://www.searchenginejournal.com/googles-transparency-report-to-include-https-adoption-rates/159732/|title = Google’s Transparency Report to Include HTTPS Adoption Rates|date = March 25, 2016|accessdate = November 19, 2017|publisher = Search Engine Journal}}</ref>
|-
| 2016 || {{dts|March 23}} || || || || Google provides a list of certificate authorities it does not trust.<ref>{{cite web|url = https://www.theregister.co.uk/2016/03/23/google_now_publishing_a_list_of_cas_it_doesnt_trust/|title = Google publishes list of Certificate Authorities it doesn't trust. Thawte experiment aims to expose issuers of dodgy creds|last = Chirgwin|first = Richard|date = March 23, 2016|accessdate = November 20, 2017|publisher = ''The Register''}}</ref>
|-
| 2016 || {{dts|April 28}} || Website || WIRED || Default HTTPS-only || ''WIRED'' announces that its website has gone HTTPS-only. The article announcing the transition explains the challenges involved in making sure every digital asset loaded on every page is HTTPS.<ref>{{cite web|url = https://www.wired.com/2016/04/wired-launching-https-security-upgrade/|title = WE'RE GOING HTTPS: HERE'S HOW WIRED IS TACKLING A HUGE SECURITY UPGRADE|last = Tollman|first = Zack|date = April 28, 2016|accessdate = February 11, 2018|publisher = ''WIRED''}}</ref>
|-
| 2016 || {{dts|June 14}} || App store service || Apple || Default HTTPS-only || At the {{w|Apple Worldwide Developers Conference}}, Apple announces that it will require all iOS apps to use HTTPS connections by the end of 2016.<ref>{{cite web|url = https://techcrunch.com/2016/06/14/apple-will-require-https-connections-for-ios-apps-by-the-end-of-2016/|title = Apple will require HTTPS connections for iOS apps by the end of 2016|last = Conger|first = Kate|date June 14, 2016|accessdate = February 11, 2018|publisher = ''TechCrunch''}}</ref>
|-
| 2016 || {{dts|June 15}} || Website || TechCrunch || Default HTTPS-only || Technology new website ''{{w|TechCrunch}}'' announces that it has gone HTTPS-only.<ref>{{Cite web|url = https://techcrunch.com/2016/06/15/techcrunch-has-gone-https/|title = TechCrunch has gone HTTPS|last = Wilke|first = Nicole|date = June 15, 2016|accessdate = November 19, 2017}}</ref>
|-
| 2016 || {{dts|August 1}} || Website || YouTube || State of HTTPS adoption || {{w|YouTube}} announces that it serves 97% of traffic over HTTPS.<ref>{{cite web|url = https://youtube-eng.googleblog.com/2016/08/youtubes-road-to-https.html|title = YouTube's road to HTTPS|date = August 1, 2016|accessdate = November 19, 2017|publisher = YouTube}}</ref>
|-
| 2016 || {{dts|August}} || Website || Netflix || Default HTTPS-only || {{w|Netflix}} announces that it is adding TLS encryption to all its video streams, and expects to finish the process by year-end.<ref>{{cite web|url = https://medium.com/netflix-techblog/protecting-netflix-viewing-privacy-at-scale-39c675d88f45|title = Protecting Netflix Viewing Privacy at Scale|date = August 8, 2016|accessdate = November 19, 2017|publisher = Netflix on ''Medium''}}</ref><ref>{{cite web|url = https://www.engadget.com/2016/08/09/netflix-https/|title = Netflix explains how and why it's switching to HTTPS streaming. Adding encryption increases privacy for viewers -- and for Netflix.|date = August 9, 2016|accessdate = November 19, 2017}}</ref>
|-
| 2016 || {{dts|August 25}} || Report/Observatory || Mozilla || State of HTTPS adoption || Mozilla, the organization that manages the {{w|Firefox}} browser, creates the Mozilla Observatory to track the web and its security. Among other things, this tracks the state of HTTPS adoption.<ref>{{cite web|url = https://pokeinthe.io/2016/08/25/observatory-by-mozilla-a-new-tool/|title = Observatory by Mozilla: Making the Web Safer|last = King|first = April|date = April 25, 2016|accessdate = November 20, 2017}}</ref><ref>{{cite web|url = http://securityaffairs.co/wordpress/50656/security/mozilla-observatory-tool.html|title = Mozilla launched the Observatory tool to test the security of websites|last = Paganini|first = Pierluigi|date = August 27, 2016|accessdate = November 20, 2017}}</ref>
|-
| 2017 || {{dts|January 10}} || Website || New York Times || Default HTTPS-only || The ''New York Times'' announces that it has made a number of its articles default to HTTPS, including the home page, section and topic pages, and all articles published 2014 or later, and that it plans to make the rest of its site HTTPS as well.<ref>{{cite web|url = https://open.blogs.nytimes.com/2017/01/10/https-on-nytimes-com/|title = HTTPS on NYTimes.com|last = Konigsburg|first = Eitan|last2 = Wan|first2 = Vinessa|publisher = ''New York Times'' Open blog|date = January 1, 2010|accessdate = November 19, 2017}}</ref>
|-
| 2017 || {{dts|January}} || Browser || Chrome || Security warning || With version 56, {{w|Google Chrome}} begins marking as "Not Secure" (in the address bar) any webpages collecting sensitive data such as passwords or credit-card information without using HTTPS.<ref name=not-secure-october-plans>{{cite web|url = https://www.searchenginejournal.com/google-is-requiring-https-for-secure-data-in-chrome/183756/|title = Google Is Requiring HTTPS for Secure Data in Chrome|last = Murray|first = Brock|date = January 21, 2017|accessdate = November 19, 2017}}</ref><ref name=zdnet-noose>{{cite web|url = http://www.zdnet.com/article/google-tightens-noose-on-http-chrome-to-stick-not-secure-on-pages-with-search-fields/|title = Google tightens noose on HTTP: Chrome to stick 'Not secure' on pages with search fields. In October, Google will begin phase two of its plan to label all HTTP pages as non-secure.|last = Tung|first = Liam|date = April 28, 2017|accessdate = November 15, 2017|publisher = ZDNet}}</ref>
|-
| 2017 || {{dts|January 4}} || Website || National Public Radio || Default HTTPS-only || {{w|National Public Radio}} announces that it has transitioned most of its webpages and streaming content to HTTPS, and is making sure that any new content is served through HTTPS.<ref>{{cite web|url = http://digitalservices.npr.org/post/update-https-transition-streams-and-podcasts|title = Update to the HTTPS Transition for Streams and Podcasts|last = Faughan|first = Kate|date = January 4, 2017|accessdate = February 11, 2018|publisher = National Public Radio}}</ref>
|=
| 2017 || {{dts|March 30}} || Website || Pornhub || Default HTTPS-only || {{w|Pornhub}}, the world's largest pornographic video site, switches to HTTPS-only. Sister service YouPorn is scheduled to go HTTPS-only on April 4.<ref>{{cite web|url = https://www.wired.com/2017/03/pornhub-https-encryption/|title = THE WORLD'S BIGGEST PORN SITE GOES ALL-IN ON ENCRYPTION|last = Barrett|first = Brian|date = March 30, 2017|accessdate = November 9, 2017|publisher = ''Wired''}}</ref><ref>{{cite web|url = https://www.theverge.com/2017/3/30/15125048/pornhub-youporn-https-encryption-privacy|title = Pornhub now turns on encryption by default|last = Garun|first = Natt|date = March 30, 2017|accessdate = November 19, 2017|publisher = ''The Verge''}}</ref>
|-
| 2017 || {{dts|May 22}} || Website || Stack Overflow || Default HTTPS-only || {{w|Stack Overflow}} announces that it has migrated to HTTPS, after four years of work on the migration. All other Stack Exchange websites are also moved over to HTTPS.<ref>{{cite web|url = https://nickcraver.com/blog/2017/05/22/https-on-stack-overflow/|title = HTTPS on Stack Overflow: The End of a Long Road|date = May 22, 2017|accessdate = November 19, 2017|last = Craver|first = Nick}}</ref><ref>{{cite web|url = https://stackoverflow.blog/2017/05/22/stack-overflow-flipped-switch-https/|title = How Stack Overflow Flipped the Switch on HTTPS|last = Taylor|first = Anita|date = May 22, 2017|accessdate = November 19, 2017|publisher = Stack Overflow}}</ref>
|-
| 2017 || May through {{dts|August 16}} || Website || Springer-Verlag || Default HTTPS-only || Publisher Springer transitions its websites to HTTPS, with HTTP redirecting to HTTPS.<ref>{{cite web|url = https://knowledge.exlibrisgroup.com/360_Services/360_Link/Knowledge_Articles/360_Link%3A_Springer_Transition_to_https_--_effective_August_16%2C_2017|title = 360 Link: Springer Transition to https -- effective August 16, 2017|date = August 7, 2017|accessdate = February 11, 2017|publisher = ExLibris Knowledge Center}}</ref><ref>{{cite web|url = https://springeronlineservice.freshdesk.com/support/solutions/articles/6000165911-switching-to-https|title = Switching to HTTPS|publisher = Springer Online Service on Freshdesk|date = September 6, 2017|accessdate = February 11, 2018}}</ref>
|-
| 2017 || {{dts|September 13}} || Website || Imgur || Default HTTPS-only || Image-hosting service {{w|Imgur}} defaults to HTTPS-only for all users (both logged-in and others).<ref>{{cite web|url = https://community.imgur.com/t/defaulting-to-https-01-xx-2015-request-fulfilled-as-of-09-13-2017/5146/59|title = Defaulting to https (01-XX-2015) - Request fulfilled as of 09-13-2017!|date = January 29, 2015|accessdate = November 20, 2017}}</ref>
|-
| 2017 || {{dts|October}} || Browser || Chrome || Security warning || Starting with version 62, Chrome begins marking all non-HTTPS webpages as "Not Secure" for users in incognito mode.<ref name=zdnet-noose/>
|-
| 2017 || || Report || Research at Google || State of HTTPS adoption || Research at Google publishes a paper titled ''Measuring HTTPS adoption on the web''.<ref>{{cite web|url = https://research.google.com/pubs/pub46197.html|title = Measuring HTTPS adoption on the web|accessdate = November 20, 2017|last = Feit|first = Adrienne Porter|last2 = Barnes|first2 = Richard|last3 = King|first3 = April|last4 = Palmer|first4 = Chris|last5 = Bentzel|first5 = Chris|last6 = Tabriz|first6 = Parisa}}</ref><ref>{{cite web|url = https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/46197.pdf|title = Measuring HTTPS adoption on the web|accessdate = November 20, 2017|last = Feit|first = Adrienne Porter|last2 = Barnes|first2 = Richard|last3 = King|first3 = April|last4 = Palmer|first4 = Chris|last5 = Bentzel|first5 = Chris|last6 = Tabriz|first6 = Parisa}}</ref>
|-
| 2017 || || Standard || TLS 1.3 || Protocol || The standard for TLS 1.3 is under discussion, but not finalized. Browsers support it for a while as the default but then stop due to issues. See [[w:Transport Layer Security#TLS_1.3_.28draft.29]] for more. As of the end of 2017, TLS 1.3 is still not ready.<ref>{{cite web|url = https://blog.cloudflare.com/why-tls-1-3-isnt-in-browsers-yet/|title = Why TLS 1.3 isn't in browsers yet|last = Sullivan|first = Nick|date = December 26, 2017|accessdate = January 28, 2018|publisher = Cloudflare}}</ref>
|-
| 2018 || {{dts|February 27}} || Certificate authority || Let's Encrypt || Wildcard support || Let's Encrypt plans to make wildcard support fully available on this date, after launching a public test API endpoint for the ACME v2 protocol and wildcard support on January 4, 2018.<ref>{{cite web|url = https://letsencrypt.org/2017/07/06/wildcard-certificates-coming-jan-2018.html|title = Wildcard Certificates Coming January 2018|last = Aas|first = Josh|date = July 6, 2017|accessdate = January 28, 2018|publisher = Let's Encrypt}}</ref>
|-
| 2018 || {{dts|July}} (planned date), February 8 (announcement) || Browser || Chrome || Security warning || Google Chrome announces that starting with Chrome 68, which will be released in July, all plain HTTP sites will be marked as not secure.<ref>{{cite web|url = https://security.googleblog.com/2018/02/a-secure-web-is-here-to-stay.html|title = A secure web is here to stay|date = February 8, 2018|accessdate = February 11, 2018|publisher = Google Security Blog|last = Schechter|first = Emily}}</ref><ref>{{cite web|url = https://techcrunch.com/2018/02/08/chrome-will-soon-mark-all-unencrypted-pages-as-not-secure/|title = Chrome will soon mark all unencrypted pages as ‘not secure’|last = Lardinois|first = Frederic|date = February 8, 2018|accessdate = February 11, 2018|publisher = ''TechCrunch''}}</ref><ref>{{cite web|url = https://arstechnica.com/gadgets/2018/02/from-july-on-chrome-will-brand-plain-old-http-as-not-secure/|title = From July on, Chrome will brand plain old HTTP as “Not secure”. The "Not secure" label will go where the padlock would go for an encrypted connection.|last = Bright|first = Peter|date = February 9, 2018|accessdate = February 11, 2018|publisher = ''ArsTechnica''}}</ref>
|}

== References ==

{{reflist|30em}}
