As more and more professional work and personal enjoyment moves to online environments, and as more and more access to the Internet happens through mobile devices while people are on the move, it is important to be able to operate well with Internet connectivity that is poor or unreliable. This guide explores how to deal with poor Internet connectivity. It builds on top of the ideas in the guide on how to [[Efficiently Work Offline|efficiently work offline]].

The methods discussed here are mostly independent, but the first method ("Understanding the Phenomena ...") provides important background knowledge for the other methods. Some of the methods describe things you can do during periods of poor connectivity, whereas others describe things you must do before the period of poor connectivity. Some methods describe things that can be done either before or during poor connectivity. Which of these buckets a method falls under is mentioned parenthetically in the method title.

== Steps ==

=== Understanding the Phenomena Underlying Poor Internet Connectivity (Background Knowledge) ===

# Understand the different ways that Internet connectivity can be poor.
#* Low bandwidth: This usually means that downloads take a long time, because the amount of data that can be transferred per second is low
#* High latency: This means that the time it takes for each round trip from the remote websites to your Internet device is high (usually, higher than for a good Internet connection by hundreds of milliseconds)
#* High packet loss: This means that a lot of pieces of information get lost in transit between your Internet device and the remote websites
#* Brief periods of very bad or no connectivity: This means that there are brief periods, ranging from a few seconds to a few minutes, when you are unable to connect to the Internet or when one of the above problems (low bandwidth, high latency, high packet loss) becomes much worse than normal. In some cases, these problems are self-correcting; in others, they may require a manual action such as disconnecting and reconnecting your device or router.
# Understand the meaning of low bandwidth.
#* Bandwidth refers to the amount of data that can be transferred per second for uploads and downloads. It is usually reported as a pair of numbers, one for the download speed and one for upload speed.
#* A typical home broadband connection or 4G mobile Internet connection should offer download speeds in excess of 5 Mbps (which means in excess of around 600 KB/s) and upload speeds in excess of 2 Mbps (which means in excess of 250 KB/s).
#* Most Internet use relies primarily on downloads, and most home broadband and 4G networks offer higher download than upload speeds. Uploads usually become important when you are uploading a large file to the cloud or to a remote server. For most use cases, such as visiting web pages or streaming video, download speed is the bottleneck, so we will focus on download speeds.
#* However, it's important to keep in mind that in some cases, continuous large uploads can reduce download speeds and even cause downloads to time out.
#* Rule of thumb 1: Download speeds of under 1.6 Mbps (or 200 KB/s) will tend to feel frustratingly slow for purposes such as streaming high-definition video and browsing websites with images, flash, and videos. For sites with HTML5 videos with adaptive bitrate streaming, you may find the video quality to automatically degrade from high-definition to standard-definition to accommodate the reduced bandwidth while avoiding buffering. This bandwith roughly corresponds to "Fast 3G" in Chrome's network conditions emulation, but in practice, even 4G connections in fast-moving trains above ground offer roughly this bandwidth.<ref name=fast-3g>[https://cs.chromium.org/chromium/src/third_party/blink/renderer/devtools/front_end/sdk/NetworkManager.js?q=Fast3GConditions&sq=package:chromium&dr=C&l=255 Fast 3G Conditions in Chrome Devtools code]. Retrieved May 1, 2019</ref>
#* Rule of thumb 2: Download speeds of under 400 Kbps (or about 50 KB/s) will tend to feel slow (but not frustratingly slow) for sites that have a decent number of images or dynamically loaded components. Generally, the non-dynamic components will load faster, but some dynamic components may take more time, giving the sense of a not-quite-complete site load. Examples include Gmail and Google Docs. It is also the lower end of bandwidth at which YouTube videos can play comfortably without buffering, at their lowest resolution of 144p. This bandwith roughly corresponds to "Slow 3G" in Chrome's network conditions emulation, but in practice, even 4G connections in tunnels and tubes can have this low bandwidth.<ref name=slow-3g>[https://cs.chromium.org/chromium/src/third_party/blink/renderer/devtools/front_end/sdk/NetworkManager.js?q=Slow3GConditions&sq=package:chromium&dr=C&l=247 Slow 3G conditions in Chrome Devtools code]. Retrieved May 1, 2019</ref>
#* Rule of thumb 3: Download speeds of under 100 Kbps (or about 12.5 KB/s) will tend to feel slow for text-heavy sites, but they will still be usable. Examples include GitHub and Wikipedia.
#* You can measure the bandwidth of your Internet connection by running the speed test at speedtest.net<ref name=speedtest>[https://www.speedtest.net Speed Test]</ref> or any of its competing services. NOTE: It may not be a good idea to run a speed test if your data usage is metered, since you may incur a lot of data usage charges.
#* You can also look at the effective speed for downloads of specific resources by keeping your Chrome Devtools open while you load the page, then looking at the Timing section of individual network calls in the Network panel.
# Understand the meaning of high latency.
#* High latency means that the round trip time between your Internet device and the servers of the remote websites it is connecting to is high. The latency depends on the location of the server for the remote site as well as the quality of your Internet connection.
#* A good proxy that approximates the part of latency that's due to your Internet connection is the ping metric in speed tests.<ref name=speedtest/> If this metric is under 50 ms, your Internet connection is generally good.
#* The impact of latency on the loading of websites depends partly on the way the website loads resources. If there are many sequential steps of loading content dynamically from servers, even a slightly higher ping metric can translate to a significantly higher load time for the website.
#* Rule of thumb 1: Ping metrics under 600 ms are usually fast enough for most purposes, including web browsing and watching streaming video. This is also roughly the experience of "Fast 3G" network condition emulation in Chrome.<ref name=fast-3g/>
#* Rule of thumb 2: Ping metrics under 2 seconds are usually fast enough to make web browsing tolerable, though sites with lots of images may take a while for all the images to load. This is also roughly the experience of "Slow 3G" network condition emulation in Chrome.<ref name=slow-3g/>
#* Rule of thumb 3: Ping metrics under 15 seconds are usually good enough to make it possible to use text-heavy sites for reference, but require patience to use and do not make for a good interactive experience.
#* One situation where you might see high latency while having an otherwise stable connection and reasonably good bandwidth is if you are using satellite Internet.<ref>[https://www.exede.com/blog/satellite-internet-latency-whats-big-deal/ Satellite internet latency: Whatâ€™s the big deal?]. Alex Miller. Retrieved September 6, 2017</ref> In this case, the high latency is literally because of the huge distance that the signal needs to travel.
#* One way to check if your Internet connection effectively has a problem of high latency (as opposed to only a problem of low bandwidth) is to load the domain <nowiki>http://www.example.com</nowiki> (if you've visited the page before, make sure to disable cache when reloading it). The page is just 1.2 KB in size, so the time between getting the first byte and the download completing will usually be under a second. Almost all the time is spent in the round trip.
#* One way to distinguish high latency from the other problems (packet loss and temporary loss of connectivity) is to see if there is a reasonably constant lag between making a request and getting the response.
#* To check the impact of latency on the load of a particular webpage, keep Chrome Devtools open before loading the page, and check for the TTFB metric in the Timing section for each network call.
# Understand the meaning of high packet loss.
#* With high packet loss, you might see a random subset of requests failing, but the set of requests that fails changes on each load.
#* One way of checking for this is to run a command like `ping example.com` in a terminal and check if some of the pings are failing.
# Understand the meaning of brief periods of very bad or no connectivity.
#* This means that for brief periods ranging from a few seconds to a few minutes, websites fail to load, or take really long to load. This could be a mix of significantly reduced bandwidth and significantly increased latency.
#* The causes could be geographical: for instance, if on a train, you might traverse through network blind spots of your cellular carrier. The causes could also be related to varying levels of network congestion based on who else is using the network.
#* For cellular networks, this often manifests itself as what is called "Lie-Fi": the cellular device will claim to be connected, but in practice, all network calls from it fail or take a very long time.<ref>[https://www.urbandictionary.com/define.php?term=lie-fi lie-fi]. Urban Dictionary. Retrieved May 3, 2019</ref><ref>[https://www.outsystems.com/blog/lie-fi.html Won't Get Fooled Again: 
Lessons in Lie-Fi]. Ricardo Ferreira. Retrieved May 3, 2019</ref> Also, note that for a device (such as a laptop) using a hotspot of a cellular device, that device will definitely show itself as still connected to the cellular device (which is the immediate upstream), so the Lie-Fi problem will manifest itself there too.
#* This may sometimes be confused with high latency. To distinguish from high latency. note that if, rather than a constant lag, you see that there are specific points in time when large numbers of pending requests get processed, the problem is more likely to be one of temporary loss of connectivity than high latency.
#* Other symptoms of this on Chrome: If the immediate upstream disconnects, this may show up as ERR_INTERNET_DISCONNECTED. Otherwise, you may see errors such as ERR_NAME_NOT_RESOLVED, DNS_PROBE_FINISHED_NXDOMAIN, ERR_EMPTY_RESPONSE, ERR_SSL_VERSION_INTERFERENCE, ERR_SSL_PROTOCOL_ERROR, ERR_CONNECTION_CLOSED, or ERR_TIMED_OUT. While these errors have specific meanings, they are thrown for spurious reasons when the Internet connection is poor.
# Understand how the relation between your device and the immediate upstream it is connecting to (a router, range extender, access point, or cell tower) affects your Internet connectivity. The biggest effect is on bandwidth. The others (latency, packet loss, brief periods of bad connectivity) may also be affected.
#* Home and small office wi-fi networks are usually set up using a main router and sometimes one or more range extenders. Large public networks (such as libraries or large office spaces) have a wired network with multiple access points. Devices will connect to the router and/or range extender in the former case, and to the closest access point in the latter case.<ref>[https://www.linksys.com/us/r/resource-center/what-is-a-wifi-access-point/ What is an Access Point and How is it Different from a Range Extender?]</ref>
#* In the case of cellular devices using a cellular data plan, the device will connect to the closest cell tower. The cellular network may use amplifiers, especially for locations that are deep indoor or underground.
#* In each case, the bandwidth that your device gets from the upstream is dependent on five factors: how much bandwidth the upstream has with its own upstream (e.g., the router may also be getting a limited bandwidth from your Internet Service Provider), hardware-imposed limits on the maximum bandwidth your upstream is willing and able to give your device, hardware-imposed limits on the maximum bandwidth your device can support, other resources using up the capacity of your upstream, and obstacles (distance, physical obstacles, and channel interference) that weaken the communication between your device and the upstream. Usually, in a given context, ''only one of these factors is the constraining factor causing poor connectivity''. In other words, until you solve that problem, addressing the others won't improve your connectivity. For instance, if your ISP has only given you a 2 Mbps download / 1 Mbps upload connection, then upgrading from a 100 Mbps router to a 1 Gbps router won't help, nor will moving your device closer to the router, because it's the limit imposed by the ISP that is more binding.
# Understand how overall Internet congestion affects your Internet connectivity. The main effect is on bandwidth, but others (latency, packet loss, brief periods of bad connectivity) may also be affected.
#* In many residential areas, Internet use is heaviest during the evening hours of 7 PM to 9 PM (and sometimes till 11 PM) due to heavy use of streaming media for people watching TV shows, movies, and other videos. This time is called Internet rush hour. Bandwidth may be lower at this time because of congestion at the level of your ISP.


=== Improving Connectivity (Diagnosis Before and During Poor Connectivity) ===

#Check that you are on the wi-fi or cellular network that you intend to be.
#* If you're using a mobile device, and you intend it to use a wi-fi network rather than the cellular network, make sure it is connected to the wi-fi network.
#* If you commute or travel frequently with your computer, you may have been using tethering with a portable hotspot of your phone, and then forgotten to switch from that to a home wi-fi network, so you may be experiencing poor connectivity. If you regularly have issues like this, edit your wi-fi preferences to prioritize your networks in the correct order. For instance, you will usually put your home wi-fi network on top, and any trusted high-speed wi-fi networks above the network of your phone hotspot.
#* If you are using a cellular network, it may have a data cap for fast speeds (for instance, only the first 6 GB of data will be accessible using a 4G network; after that, you will be switched to 3G). If you are seeing reduced speeds compared to what you expect, check if you have exceeded the data cap for fast speeds. You may be able to purchase some more data at fast speeds for the rest of the billing cycle.
#See if distance, physical obstacles, or channel interference are hurting the quality of the connection between your device and its immediate upstream (a router, range extender, access point, or cell tower or amplifier).
#* You can use the Speedtest app on your phone to understand how connectivity varies with location. Make sure you have the app on your phone and that your phone is connected to the wi-fi network. Then use the Speedtest app while walking around the area. Then, understand the app's test results and how they vary with location.
#* In an open space (i.e., ignoring things like physical obstacles and reflection from walls) signal strength generally falls quadratically with distance from the upstream. This means that if you double the distance to the router, the signal strength becomes one-fourth of its value.
#* In closed spaces, the effect is less dramatic, becase signals may reflect off the walls and not get diffused too quickly with distance.
#* For a typical home network, the signal will generally be strong within spaces directly in line of sight of the router, or one or two rooms away from the router's line of sight. Beyond a certain distance, signal strength will start falling rapidly.
#* If there are physical obstacles between your device and the router/range extender/access point, this could interfere with your connection speed. Different obstacles have different levels of impact, with metal and mirrors causing the highest interference.<ref name=netspot>[https://www.netspotapp.com/wifi-interference.html How to troubleshoot Wi-Fi Interference with NetSpot]</ref>
#* To reduce channel interference, you may wish to switch from a 2.4 GHz band to a 5 GHz band, and choose a less crowded channel. These are both router-level settings that may or may not be available in your router.<ref name=netspot/>
#* If you run speed tests, you will likely find that up to some distance from the router and up to some level of obstacles, the speed test results don't change. Then, beyond a point, the upload and download bandwidth start falling dramatically. The most likely reason for this is that the constraining factor for bandwidth is something other than obstacles; the constraining factor may be the bandwidth provided by the ISP, hardware limitation on bandwidth supported by the router or your device, or other resources using up your router's capacity. ''In such cases, therefore, once you are close enough to the router that the constraining factor isn't distance or obstacles, there is no point getting closer.''
#* For cellular networks, connectivity is generally higher closer to the outdoors. Areas that are very far inside the building may have poor connectivity. Connections are also poorer inside concrete buildings compared to wooden buildings (because of greater signal interference from concrete).<ref>[https://www.pcworld.com/article/2039683/is-3g-4g-slower-indoors-not-as-much-as-you-might-think.html Is 3G/4G slower indoors? Not as much as you might think]</ref> In dense areas, connectivity may also be higher on higher floors due to less congestion and less physical distance from the cell tower. Cellular connectivity also tends to be worse in elevators because they are enclosed spaces and the metal used for the elevator interferes with the signal.
# See how your immediate upstream handles multiple devices connected to it.
#* For instance, suppose you are on a home wi-fi network. You can try running simultaneous speed tests from two devices, then compare the results with running the speed tests separately. If the total download of the simultaneous speed tests matches the bandwidth of each of the separately run speed tests, then the bandwidth constraint is coming from the total bandwidth available (for any of the reasons such as hardware limitations of the router, bandwidth made available by ISP, etc.). If, however, the download speeds for the simultaneous speed tests are close to those for the corresponding separate speed tests, then the router may be imposing per-device bandwidth limits.

=== Being Up to Date (Setup Effort Shortly Before Having Poor Connectivity) ===

#Be up-to-date just before you go into a zone of bad connectivity. If using Dropbox or Google Docs, make sure you're synced up on all the material you intend to work on before you go offline. Similarly, if working on a code repository using Git or something similar, make sure to pull in changes from the remote branch so you are working with up-to-date code.
#If you intend to browse particular webpages, open them all up in browser tabs prior to your departure. Unless your computer has memory or processing power limitations, it's better to open more pages than the ones you are absolutely sure you'll need. A typical laptop with 8GB of RAM can handle 50+ tabs open in Chrome just fine.
#If you intend to watch videos, load up the video page and let the video buffer up completely on your local drive. YouTube allows you to continue watching videos offline if the video is buffered completely, as long as you don't close the tab or navigate away from the video page in the tab.
#* You might find it useful to turn off Autoplay on YouTube, so that it doesn't try navigating to the next video after the video completes playing.
#If your offline work involves editing a Google Doc, WordPress blog post, Wikipedia page, or something similar, open the editing area prior to going offline. WordPress and most CMSs allow you to continue editing offline as long as you keep that tab open and don't navigate away. You can also open the editing areas of other documents or pages that you might want to copy/paste from.
#If you want to develop web applications that work offline and automatically synchronize data when connectivity is restored, use the Meteor.js framework.

=== Using Network-Conserving Settings (Setup Effort, Mostly Doable Before Poor Connectivity) ===

# If using a mobile device, use data-saving settings on it to reduce the amount of data it communicates in the background.
#* Mobile devices have a Data Saver mode available from their data usage settings.
#* Individual apps within the mobile device may also have settings to minimize background downloads and use lower bandwidth and less frequent syncing. These settings will apply over and above the settings on your device. For instance, Facebook has a Data Saver mode, and also an option to turn Data Saver mode off when on wi-fi connections.
#* For some apps that have autoplaying video when you scroll to it in the feed, you may want to turn off the autoplay feature for videos. Similarly, for apps like YouTube that autoplay the next video after completing the existing one, you may want to turn off that autoplay feature.
# If you use video websites frequently on poor connections, configure them to use less bandwidth.
#* Most modern video websites use HTML5 with adaptive bitrate streaming, so they will automatically stream at a lower bandwidth if your connection quality is poor. This system works quite well compared to the earlier method of non-adaptive streaming, and you may find it is good enough for you. However, in practice these settings may not be conservative enough, because the adaptive determination of bandwidth is a somewhat hit-and-miss process and can be fooled by short bursts of good connectivity.
#* Netflix allows you to control both your general data usage and your data usage when on mobile cellular connections.<ref>[https://help.netflix.com/en/node/87 How can I control how much data Netflix uses?], Netflix. Retrieved May 1, 2019</ref>
#* Similar settings are available in other video streaming sites. For instance, Viki allows for a control on the maximum video quality, though the quality in a given case may be lower than that based both on screen size and bandwidth (via adaptive bitrate streaming).<ref>[https://support.viki.com/hc/en-us/articles/360014619693-How-do-I-control-how-much-data-Viki-uses- How do I control how much data Viki uses?], Joshua, Viki. Retrieved May 1, 2019</ref>
# Consider the use of ad blockers.
#* If the websites you tend to visit are ad-heavy, then using ad blockers might save on a lot of bandwidth and latency. Use an ad blocker such as uBlock Origin or Adblock Plus. You can configure exceptions, and you can also choose whether to only block showing ads or also block sending data to analytics tools. You'll get most of the benefit from simply blocking showing ads, but can save even more on network costs by blocking all analytics tools.
#* If you don't want to use a full-fledged ad blocker, consider using a video adblocker such as Video Adblocker.<ref>[https://chrome.google.com/webstore/detail/video-adblocker/imjnhcoogkbmemieaehgnopdleejnmll/related?hl=en-US Video Adblocker], Chrome Web Store. Retrieved May 1, 2019</ref> Video ads tend to be the most bandwidth-intensive, so blocking these out will give you good bang for the buck.
#* If you don't want to install an ad blocker, consider using Chrome's ad settings at <nowiki>chrome://settings/content/ads</nowiki> where you can block ads from specific websites. Chrome's default is to block ads on sites that it deems as showing intrusive and misleading ads.
#* You can also try the ''Send a "Do Not Track" request with your browsing traffic'' option in Chrome settings, or equivalent settings in other browsers, to reduce overhead of third-party tracking.
# Consider turning off extensions that send additional data to third parties on each site visit.
#* Examples include Alexa and SimilarWeb extensions.
# Consider disabling JavaScript on sites that have a lot of unnecessary dynamic reloading.
#* In Chrome, you can control these settings at <nowiki>chrome://settings/content/javascript</nowiki>.
# If you generally use a VPN, consider either not using it during periods of poor connectivity, or configuring it to better handle poor connectivity.
#* Having your traffic routed through the VPN can slow you down if you frequently disconnect and reconnect to the Internet. Every time you have connectivity issues, you will be disconnected from the VPN, so when you reconnect to the Internet, there may be a further delay reestablishing the connection to the VPN. This can double the time taken to effectively get back online. It can be particularly confusing for services such as Slack or Facebook Messenger.
#* Routing the traffic through the VPN may also affect your bandwidth because all your traffic is being sent using the single connection to the VPN. So you may not be taking advantage of your wi-fi network's parallelism fully.<ref>[https://www.reddit.com/r/tmobile/comments/aeij7i/speedtest_multiconnection/ Speedtest multi-connection], Reddit.</ref>
#* See if you can configure the VPN to only have some traffic routed through it (i.e., traffic that you need to make go through the VPN).
# Consider using apps instead of mobile websites after investigating the bandwidth implications.
#* For some sites, the app offers the advantage of preserving more state and data on the device, thus putting less stress on the network to get data.
#* Note that it's usually a bad idea to try downloading, installing, and authenticating within the app when connectivity is poor. So, the decision and legwork must be done while your connectivity is good.
# Increase your cache size.
#* If you do a decent amount of web browsing, the default cache size of most web browsers is too small.
#* Unfortunately, for Chrome, you cannot increase cache size using any settings available within Chrome. Rather, you have to pass in a startup parameter. Details are available for Windows<ref>[https://www.thewindowsclub.com/change-chrome-cache-size-performance How to change Google Chromeâ€™s Cache Size for better performance on Windows 10], The Windows Club. Retrieved May 1, 2019</ref> and Mac OS X.<ref>[https://superuser.com/questions/602924/change-google-chrome-cache-size-on-os-x Change Google Chrome cache size on OS X], Stack Overflow. Retrieved May 1, 2019</ref>
# Tweak your automatic downloads settings to reduce the risk of accidentally starting large downloads.
#* In Chrome, you can access these settings at <nowiki>chrome://settings/content/automaticDownloads</nowiki>

=== Minimizing Resource Reload (During Poor Connectivity) ===

# Prefer switching to an already loaded browser tab rather than loading the page again.
#* When you start typing words from the title and url into the address bar, browsers such as Chrome and Firefox (on desktop) give you the option to switching to the existing tab, if it exists. Use this option. On mobile browsers, you'll need to manually go through your existing tabs to identify the relevant one.
#* This works well for pages that we don't expect to change much over time, so that the old tab for the page should still have accurate information. It also works for pages that we do expect to keep changing over time if the updates are dynamically reflected in the already open tab.
# If you do need to load a new version of a page already opened in a tab, do so conservatively.
#* Some websites offer you the ability to dynamically reload specific pieces of the page without reloading the whole page. If the site of interest to you does this, consider using that capability. That way, the amount of resources you're loading over the network is smaller than a full page.
#* Otherwise, it's better to load the new version of the page in a new tab, and close the existing tab only after verifying that the new tab loaded up successfully.
# In general, try to load new pages in new tabs.
#* This conserves the existing tabs, which might be harder to reload because of your poor connectivity.
#* You can also set up the new tab appropriately (open DevTools, network throttling, mobile emulation).
#* When typing in a url, use Ctrl+T (Windows) or Cmd+T (Mac) or the new tab option on your phone browser to open a new tab, then type the url there.
#* When opening links from existing pages, right-click and open in new tab. However, if you prefer to set up the tab in some way (open DevTools, network throttling, mobile emulation) it is better to copy the link, open the new tab and set it up, then paste the link into the tab address bar.
# Maximize the use of cache
#* If you have Chrome Devtools open for the tab, make sure that the Disable Cache box is not checked (if Devtools is not open, then it should attempt to load from cache)
#* If reloading a page, use Ctrl+R (on Windows) or Cmd+R (on Mac) rather than Ctrl+Shift+R (on Windows) or Cmd+Shift+R (on Mac). Including the Shift in your command will bypass cache and try to load all resources remotely, which can use more network and slow down the page load.
# Use bookmarks as well as the techniques discussed in [[Navigate to Web Pages Efficiently Without Using Navigation Menus]] to get more quickly to the page you finallty want to get to.
#* This will cut down on unnecessary intermediate page loads. For instance, you might otherwise get to a Wikipedia page by first doing a Google Search, then clicking from the search results, or by first going to the Wikipedia homepage, then using the search bar. However, with the advanced techniques, you may be able to get to your desired destination page directly, without intermediate page loads.
#* On poor connections, the savings from this more efficient navigation can be significant.
# Use full paths with the protocol when entering urls in the address bar.
#* For instance, if the site is HTTPS-only, with HTTP redirecting to HTTPS, enter the full url with <nowiki>https://</nowiki> at the beginning. This will avoid an unnecessary redirect step, which can add a lot to the load time for high-latency connections.
#* Similarly, if the site has two url versions, with domainname.com redirecting to www.domainname.com, it is better to enter the url that it will eventually redirect to.
#* For some sites, this is less of an issue because the redirects are handled server-side, but for others, it can require additional round trips between the client and the server.
#* For sites that you are visiting for the first time, plain HTTP is faster than HTTPS; if the site offers both options and does not redirect HTTP to HTTPS, using the plain HTTP version will be faster. But for repeat visits, if the site has good configurations for dealing with HTTPS, then HTTPS and HTTP are comparable for subsequent loads.

=== Avoiding Bandwidth Hogs and Monitoring Results (During Poor Connectivity; Advanced) ===

# Use bandwidth-conserving settings on conference calls.
#* In general, video uses several times as much bandwidth as audio, and it is also continuously on. Turning off your webcam helps, and not receiving video from the other parties can also help.
#* If you are in a room with others, and don't need to be connected to audio, see if your conferencing software allows you to join without audio.
#* If you don't need to screenshare or view a screenshare, considering dialing in to the conference call via phone instead.
#* If you find that your Internet connectivity is very low when you are sharing your screen, consider stopping your screenshare.
# Avoid opening websites that you know tend to be bandwidth hogs.
#* News and opinion sites often have autoplaying videos that will start downloading and playing when you visit them. If you see a link to such a site, it may be best to either not open the link or use some of the later tips to open it carefully.
#* If it's a site you already know and have configured appropriately using earlier tips (for instance, turned off JavaScript, ads, or videos on that site) then you may safely open it.
# Use network throttling or go offline on tabs loading less important content.
#* If there's a tab that seems to be continuously reloading resources, or loading videos, but you don't want to close it, open Chrome Devtools for the tab, go to the Network panel, and check the box to go Offline. Network activity from the tab will stop. You need to keep DevTools open to keep the settings active. The settings apply only to that tab.
#* In some cases, you may want a tab to continue being online, but avoid it hogging too much bandwidth. For instance, this might be the case for videos playing in the tab that are hogging too much bandwidth, and that are not adapting to sufficiently low resolutions. You can use the network throttling options in Chrome Devtools. The default options are "Slow 3G" and "Fast 3G" but you can create custom throttling profiles with lower bandwidths allocated to them. You need to keep DevTools open to keep the settings active. The settings apply only to that tab.
# Use mobile emulation for sites (or the mobile version of site urls) where the mobile version is simpler and leaner but has all the information you need.
#* In Chrome, you can use mobile emulation by opening DevTools and clicking on the mobile icon in the top left. You need to keep DevTools open to stay in mobile emulation. The settings apply only to that tab.
#* To get best results, you need to be in mobile emulation before the page load starts, so that the server can, at load time, determine that it needs to load the mobile version.
#* Some sites have different mobile version urls that you can use even without mobile emulation, to access the mobile version of the site. Note that mobile versions of sites are not always more lightweight; for instance, for Wikipedia, the size of the desktop and mobile pages is comparable.
# Use simpler text mirrors for sites that load slowly and have text-only mirrors.
#* For instance, the LessWrong website (lesswrong.com) has two mirrors: GreaterWrong (greaterwrong.com) and lw2.issarice.com. The same piece of content can have dramatically different sizes in the three locations. For instance, a randomly selected popular post<ref>[https://www.lesswrong.com/posts/brQwWwZSQbWBFRNvh/how-to-use-bureaucracies How To Use Bureaucracies]. LessWrong. July 17, 2018</ref> downloads 1.7 MB on lesswrong.com, but changing the domain name to greaterwrong.com results in 455 KB of resources downloaded, and changing the domain name to lw2.issarice.com results in 23.1 KB of resources downloaded. Of the three versions, the first takes over 10 seconds to load on Chrome's "Slow 3G" network emulation, while the last loads in under 3 seconds even with "Slow 3G" network emulation.
# Make sure to refuse any suggested downloads and software upgrades from your operating system or other softwares.
#* If a large download started accidentally, make sure to pause it (if allowed) or otherwise cancel it.
# Examine your network usage settings to identify what might be using up your bandwidth, and identify any unnecessary processes currently using bandwidth.
#* On Windows, you can get this data from the Windows Task Manager.<ref>[https://www.windowscentral.com/how-monitor-network-usage-your-windows-10-devices How to monitor network usage on Windows 10. When you have a limited data plan, it's a good idea to monitor your network usage to prevent going over your data cap, and in this Windows 10 guide, we'll show you how.] Windows Central. Retrieved May 2, 2019</ref>
#* On Mac OS, you can get this data via the Network section of the Activity Monitor.<ref>[https://support.apple.com/en-us/HT201464 How to use Activity Monitor on your Mac]. Apple Support. Retrieved May 2, 2019</ref><ref>[https://www.makeuseof.com/tag/activity-monitor-mac-equivalent-ctrlaltdelete/ What Is Activity Monitor? The Mac Equivalent of Task Manager], Rahul Saigal, April 15, 2019. Retrieved May 2, 2019</ref>
#* In peacetime, if you are not actively downloading or uploading resources, your bandwidth use should be between 1 KB/s and 5 KB/s for both upload and download. If you completely close Chrome and other tools such as Slack or Skype, it should fall to under 1 KB/s for both download and upload. NOTE: The estimates here are purely for benchmarking purposes. It is not recommended that you close these applications, unless you are quite sure you won't need to use them through your period of poor connectivity. That's because the startup of these applications, and the reopening of existing tabs on Chrome, can be heavy on bandwidth.
#* You can examine the effect of various changes you make (such as closing tabs or taking them offline) on the network activity.

=== Understanding Failure Modes of Tools When Network Calls Fail (Acquire Understanding Before Poor Connectivity; Apply During Poor Connectivity) ===

# If using an online communications tool such as Facebook Messenger or Slack, pay attention to how to confirm if messages were actually sent. These tools will not usually immediately tell you if your message failed to deliver, but they offer subtle cues that allow you to know.
#* Facebook Messenger will show a hollow circle at the bottom right of the message. If you hover over that, a tooltip of "Sending" will show up. Once the delivery is confirmed, this will change to either a blue checkmark with a whilte background (tooltip of "Sent") or a white checkmark with a blue background (tooltip of "Delivered"). If, after a certain amount of time, the delivery of the message is not confirmed, Messenger will show you an explicit message saying that the message failed to deliver, and asking you to try again. If you're using Facebook Messenger on the web, you can map the visual cues to actual behavior of network calls by keeping your network panel open and comparing.
#* With Slack, you can distinguish between successfully sent messages and other messages using any of these cues: With successfully delivered messages, hovering over the message will show five options on the top right of the message (Add reaction, Start a thread, Share message, Star message, More options), but for other messages, only three options are shown (Add reaction, Start a thread, Share Message, Star message, More options). Another cue is that, while the message is not yet delivered, the permalink to the message will have <nowiki>XXX</nowiki> in it, After some time, if the message fails to deliver, Slack will show a note saying that the message failed to deliver, and offer the option to try again or cancel.
# If using a website, get a sense for how it deals with the problem of poor connectivity.
#* In particular, beware of websites that experience ''silent failures'' where some sections just silently fail to load, giving you the false impression that data isn't present at all. Also, beware of other misleading indications.
#* In particular, if there's a case where you see missing or misleading data during a period of poor connectivity, but see the right data show up later, the site could have the silent failures problem. You can further verify the hypothesis by looking at the network panel and seeing the problem in loading the resources.
#* Consider reporting silent failure issues as bug reports to the website. For instance, if they develop the website using GitHub, you may be able to file a GitHub issue.

=== Dealing with Known Patterns of Connectivity (During Poor Connectivity) ===

# Use your knowledge of when and where you'll have good connectivity to plan your work around it. For instance, if you're traveling in a train that goes through areas with poor connectivity and areas with good connectivity, you can use this information to improve your experience.
#* While you're going through a region of poor connectivity, focus on the parts of your work that you can carry out offline, and use the tips discussed (e.g., not reloading existing tabs) to make the experience efficient. Also, start building a list (mentally or digitally) of the things you need to do when you get to a region of good connectivity.
#* When you get to a region of good connectivity, carry out all the actions (such as loading webpages, downloading resources, uploading resources) that need the good connectivity.
#* You can apply a similar principle within a home or work area, if your main station has poor connectivity, but there are other nearby areas that have good connectivity. You can bunch up your work that needs good connectivity, then temporarily go to the other area with good connectivity to execute on those.
# Try to do bandwidth-heavy pieces of work during low-traffic times of day.
#* For home Internet, generally speaking, traffic is highest and bandwidth may be lowest during the evening "Internet rush hour" which is generally the hours of 7 PM to 9 PM (though in some places can extend to 11 PM). This is due to people using that time to stream videos such as movies and TV shows. Traffic is generally low at night and in the early morning. Thus, if you have flexibility, and you are bandwidth-constrained during Internet rush hour, you should carry out bandwidth-intensive work such as downloads, uploads, and watching streaming movies in the late night or early morning.
#* Mass transit systems get more crowded during morning and evening rush hour, and cellular connectivity and bandwidth can be worse during those times. If you schedule your commute to a different time, you may be able to get a higher quality of connection and better bandwidth, in addition to the other benefits of [[Avoid Crowds in Mass Transit|avoiding crowds]].
#* For restaurants and cafes as well, connectivity may be better when they are less crowded.

=== Synchronizing with Other Users of the Network (Advance Planning Before Poor Connectivity) ===

# If multiple people who share your wi-fi network are interested in watching the same video, TV show, movie, or sports event, it may be better to watch it together, on a living room screen, rather than stream it separately for each person.
# If different people are watching different things, it may be better to stagger timings.

=== Using good settings for SSH connections (Before and During Poor Connectivity) ===

# When using SSH, use methods like screen, tmux, or nohup so that your session or job is not lost if you disconnect.
#* Starting terminals within screen or tmux will cause the terminal to persist even if your connection is lost. You can reenter later.
#* If you run jobs using nohup, the job will survive even after you log out of or disconnect from the terminal from which you started the job.
# If using a REPL on a remote machine, use appropriate settings to reduce the frequency at which progress is synced with the remote.
#* For instance, in Spark, the setting is <nowiki>--conf spark.ui.consoleProgress.update.interval=10000</nowiki>. This reduces the frquency of checking for progress bar updates to 10 seconds (from the default of 200 milliseconds).

== References ==

{{reflist}}